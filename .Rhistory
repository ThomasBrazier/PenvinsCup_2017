print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
levels(ind$d.flaq)
levels(ind$mode)
source("checkPenvins.R")
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
is.na(tmp$d.flaq)
is.na(ind$d.flaq)
sum(is.na(tmp$d.flaq))
all(is.na(tmp$d.flaq))
all(is.na(ind$d.flaq))
source("checkPenvins.R")
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
# Running only one checkPenvins at once
f = 16 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
# Running only one checkPenvins at once
f = 17 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
# Running only one checkPenvins at once
f = 17 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
str(tmp)
# Running only one checkPenvins at once
f = 17 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
source("checkPenvins.R")
# Running only one checkPenvins at once
f = 17 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
# Running only one checkPenvins at once
f = 18 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
source("checkPenvins.R")
# Running only one checkPenvins at once
f = 19 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
# Running only one checkPenvins at once
f = 19 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
# Running only one checkPenvins at once
f = 21 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
# Running only one checkPenvins at once
f = 21 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
source("checkPenvins.R")
# Running only one checkPenvins at once
f = 21 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
# Running only one checkPenvins at once
f = 22 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
# Running only one checkPenvins at once
f = 22 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
# Running only one checkPenvins at once
f = 23 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
# Running only one checkPenvins at once
f = 23 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
# Running only one checkPenvins at once
f = 23 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
source("checkPenvins.R")
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
source("checkPenvins.R")
# Running only one checkPenvins at once
f = 23 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
source("checkPenvins.R")
# Running only one checkPenvins at once
f = 23 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
tmp$alt = as.numeric(tmp$alt)
checkPenvins(tmp, bilan = FALSE)
# Running only one checkPenvins at once
f = 24 # index of file
# Running only one checkPenvins at once
f = 23 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
# Running only one checkPenvins at once
f = 24 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
# Running only one checkPenvins at once
f = 25 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
# Running only one checkPenvins at once
f = 26 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
# Running only one checkPenvins at once
f = 26 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
# Running only one checkPenvins at once
f = 27 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
source("checkPenvins.R")
# Running only one checkPenvins at once
f = 28 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
# Running only one checkPenvins at once
f = 28 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
?cat
# Running only one checkPenvins at once
f = 28 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
# Running only one checkPenvins at once
f = 29 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
# Running only one checkPenvins at once
f = 30 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
# Running only one checkPenvins at once
f = 31 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
# Running only one checkPenvins at once
f = 31 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
# Running only one checkPenvins at once
f = 32 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
# Running only one checkPenvins at once
f = 33 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
# Running only one checkPenvins at once
f = 32 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
# Running only one checkPenvins at once
f = 33 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
# Running only one checkPenvins at once
f = 34 # index of file
print(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
######################
# Assembling Ind file
ind = data.frame() # empty table for individuals
# Compile all .txt ind files into one data.frame
for (f in 1:length(list.files(path = "~/Documents/Github/PenvinsCup_2017/data"))) {
cat("Proceeding to next file...\n")
if (grepl("ind", list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])) { # only if this is an ind file
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
cat("Processing", as.character(tmp[2,1]), "ind by", as.character(tmp[2,2]),".\n")
if (ncol(tmp) == 43) { # verifying compatibility of the file by number of col
colnames(tmp) = c("transect", "resp", "date", "coef", "mode", "d.chenal", "d.mer", "alt", "surf", "p.roc", "p.moul", "p.huit", "p.bala", "p.alg", "p.encr", "p.eau", "s.flaq", "d.flaq", "Bitret", "Gibcin", "Gibsp.", "Gibtum", "Litlit", "Litobt", "Litrud", "Litsax", "Monlin", "Nasinc", "Naspyg", "Nasret", "Oceeri", "Patsp.", "Rispar", "Thalap", "sp", "haut", "larg", "peri", "pred", "coul", "text", "epizo", "masse") # remove any name of column with correct name
ind = rbind(ind, tmp) # add temp data.frame to global data.frame
} else {
warning("File ind", tmp[1], "by", tmp[2],"not added to global data frame : not the required number of columns.\n")
}
}
}
cat("All Ind files in One")
###################
# Assembling Quad file
quad = data.frame() # empty table for quadrats
# Compile all .txt quad files into one data.frame
for (f in 1:length(list.files(path = "~/Documents/Github/PenvinsCup_2017/data"))) {
cat("Proceeding to next file...\n")
if (grepl("ind", list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])) { # only if this is an ind file
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
cat("Processing", as.character(tmp[2,1]), "ind by", as.character(tmp[2,2]),".\n")
if (ncol(tmp) == 43) { # verifying compatibility of the file by number of col
colnames(tmp) = c("transect", "resp", "date", "coef", "mode", "d.chenal", "d.mer", "alt", "surf", "p.roc", "p.moul", "p.huit", "p.bala", "p.alg", "p.encr", "p.eau", "s.flaq", "d.flaq", "Bitret", "Gibcin", "Gibsp.", "Gibtum", "Litlit", "Litobt", "Litrud", "Litsax", "Monlin", "Nasinc", "Naspyg", "Nasret", "Oceeri", "Patsp.", "Rispar", "Thalap") # remove any name of column with correct name
quad = rbind(quad, tmp) # add temp data.frame to global data.frame
} else {
warning("File quad", tmp[1], "by", tmp[2],"not added to global data frame : not the required number of columns.\n")
}
}
}
cat("All Quad files in One")
# Necessary verifications
str(ind)
str(quad)
quad = quad[-35:-43] # remove any column of type Ind from the Quad file
###################
# Assembling Quad file
quad = data.frame() # empty table for quadrats
# Compile all .txt quad files into one data.frame
for (f in 1:length(list.files(path = "~/Documents/Github/PenvinsCup_2017/data"))) {
cat("Proceeding to next file...\n")
if (grepl("ind", list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])) { # only if this is an ind file
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
cat("Processing", as.character(tmp[2,1]), "ind by", as.character(tmp[2,2]),".\n")
if (ncol(tmp) == 43) { # verifying compatibility of the file by number of col
colnames(tmp) = c("transect", "resp", "date", "coef", "mode", "d.chenal", "d.mer", "alt", "surf", "p.roc", "p.moul", "p.huit", "p.bala", "p.alg", "p.encr", "p.eau", "s.flaq", "d.flaq", "Bitret", "Gibcin", "Gibsp.", "Gibtum", "Litlit", "Litobt", "Litrud", "Litsax", "Monlin", "Nasinc", "Naspyg", "Nasret", "Oceeri", "Patsp.", "Rispar", "Thalap") # remove any name of column with correct name
quad = rbind(quad, tmp) # add temp data.frame to global data.frame
} else {
warning("File quad", tmp[1], "by", tmp[2],"not added to global data frame : not the required number of columns.\n")
}
}
}
cat("All Quad files in One")
# Necessary verifications
str(ind)
str(quad)
###################
# Assembling Quad file
quad = data.frame() # empty table for quadrats
# Compile all .txt quad files into one data.frame
for (f in 1:length(list.files(path = "~/Documents/Github/PenvinsCup_2017/data"))) {
cat("Proceeding to next file...\n")
if (grepl("quad", list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])) { # only if this is an ind file
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
cat("Processing", as.character(tmp[2,1]), "ind by", as.character(tmp[2,2]),".\n")
if (ncol(tmp) == 43) { # verifying compatibility of the file by number of col
colnames(tmp) = c("transect", "resp", "date", "coef", "mode", "d.chenal", "d.mer", "alt", "surf", "p.roc", "p.moul", "p.huit", "p.bala", "p.alg", "p.encr", "p.eau", "s.flaq", "d.flaq", "Bitret", "Gibcin", "Gibsp.", "Gibtum", "Litlit", "Litobt", "Litrud", "Litsax", "Monlin", "Nasinc", "Naspyg", "Nasret", "Oceeri", "Patsp.", "Rispar", "Thalap") # remove any name of column with correct name
quad = rbind(quad, tmp) # add temp data.frame to global data.frame
} else {
warning("File quad", tmp[1], "by", tmp[2],"not added to global data frame : not the required number of columns.\n")
}
}
}
cat("All Quad files in One")
###################
# Assembling Quad file
quad = data.frame() # empty table for quadrats
# Compile all .txt quad files into one data.frame
for (f in 1:length(list.files(path = "~/Documents/Github/PenvinsCup_2017/data"))) {
cat("Proceeding to next file...\n")
if (grepl("quad", list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])) { # only if this is an ind file
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
cat("Processing", as.character(tmp[2,1]), "quad by", as.character(tmp[2,2]),".\n")
if (ncol(tmp) == 34) { # verifying compatibility of the file by number of col
colnames(tmp) = c("transect", "resp", "date", "coef", "mode", "d.chenal", "d.mer", "alt", "surf", "p.roc", "p.moul", "p.huit", "p.bala", "p.alg", "p.encr", "p.eau", "s.flaq", "d.flaq", "Bitret", "Gibcin", "Gibsp.", "Gibtum", "Litlit", "Litobt", "Litrud", "Litsax", "Monlin", "Nasinc", "Naspyg", "Nasret", "Oceeri", "Patsp.", "Rispar", "Thalap") # remove any name of column with correct name
quad = rbind(quad, tmp) # add temp data.frame to global data.frame
} else {
warning("File quad", tmp[1], "by", tmp[2],"not added to global data frame : not the required number of columns.\n")
}
}
}
cat("All Quad files in One")
# Necessary verifications
str(ind)
str(quad)
quad = quad[-35:-43] # remove any column of type Ind from the Quad file
# checkPenvins
checkPenvins(ind)
checkPenvins(quad)
setwd("~/Dropbox/M1 EFCE/Cours S1/Projet/Stat")
#-----------------------------------------------------#
# DONNEES
#-----------------------------------------------------#
# Working directory
setwd("~/Dropbox/M1 EFCE/Cours S1/Projet/Stat")
source("checkPenvins.R")
#####################
# Running a serie of checkPenvins over each file
for (f in 1:length(list.files(path = "~/Documents/Github/PenvinsCup_2017/data"))) {
#checkPenvins(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
}
#-----------------------------------------------------#
# DONNEES
#-----------------------------------------------------#
# Working directory
setwd("~/Dropbox/M1 EFCE/Cours S1/Projet/Stat")
source("~/Documents/Github/PenvinsCup_2017/checkPenvins.R")
#####################
# Running a serie of checkPenvins over each file
for (f in 1:length(list.files(path = "~/Documents/Github/PenvinsCup_2017/data"))) {
#checkPenvins(list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])
}
######################
# Assembling Ind file
ind = data.frame() # empty table for individuals
# Compile all .txt ind files into one data.frame
for (f in 1:length(list.files(path = "~/Documents/Github/PenvinsCup_2017/data"))) {
cat("Proceeding to next file...\n")
if (grepl("ind", list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])) { # only if this is an ind file
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
cat("Processing", as.character(tmp[2,1]), "ind by", as.character(tmp[2,2]),".\n")
if (ncol(tmp) == 43) { # verifying compatibility of the file by number of col
colnames(tmp) = c("transect", "resp", "date", "coef", "mode", "d.chenal", "d.mer", "alt", "surf", "p.roc", "p.moul", "p.huit", "p.bala", "p.alg", "p.encr", "p.eau", "s.flaq", "d.flaq", "Bitret", "Gibcin", "Gibsp.", "Gibtum", "Litlit", "Litobt", "Litrud", "Litsax", "Monlin", "Nasinc", "Naspyg", "Nasret", "Oceeri", "Patsp.", "Rispar", "Thalap", "sp", "haut", "larg", "peri", "pred", "coul", "text", "epizo", "masse") # remove any name of column with correct name
ind = rbind(ind, tmp) # add temp data.frame to global data.frame
} else {
warning("File ind", tmp[1], "by", tmp[2],"not added to global data frame : not the required number of columns.\n")
}
}
}
######################
# Assembling Ind file
ind = data.frame() # empty table for individuals
# Compile all .txt ind files into one data.frame
for (f in 1:length(list.files(path = "~/Documents/Github/PenvinsCup_2017/data"))) {
cat("Proceeding to next file...\n")
if (grepl("ind", list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])) { # only if this is an ind file
tmp = read.table(paste("~/Documents/Github/PenvinsCup_2017/data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
cat("Processing", as.character(tmp[2,1]), "ind by", as.character(tmp[2,2]),".\n")
if (ncol(tmp) == 43) { # verifying compatibility of the file by number of col
colnames(tmp) = c("transect", "resp", "date", "coef", "mode", "d.chenal", "d.mer", "alt", "surf", "p.roc", "p.moul", "p.huit", "p.bala", "p.alg", "p.encr", "p.eau", "s.flaq", "d.flaq", "Bitret", "Gibcin", "Gibsp.", "Gibtum", "Litlit", "Litobt", "Litrud", "Litsax", "Monlin", "Nasinc", "Naspyg", "Nasret", "Oceeri", "Patsp.", "Rispar", "Thalap", "sp", "haut", "larg", "peri", "pred", "coul", "text", "epizo", "masse") # remove any name of column with correct name
ind = rbind(ind, tmp) # add temp data.frame to global data.frame
} else {
warning("File ind", tmp[1], "by", tmp[2],"not added to global data frame : not the required number of columns.\n")
}
}
}
ind <- read.table("data/b30indCORR2.txt", header = TRUE)
source("checkPenvins.R")
checkPenvins(ind)
ind <- read.table("data/b30indCORR2.txt", header = TRUE)
setwd("~/Documents/GitHub/PenvinsCup_2017")
ind <- read.table("data/b30indCORR2.txt", header = TRUE)
source("checkPenvins.R")
checkPenvins(ind)
source("checkPenvins.R")
checkPenvins(ind)
dataset
View(ind)
source("checkPenvins.R")
checkPenvins(ind)
source("checkPenvins.R")
checkPenvins(ind)
(ind$masse[4]/(((((ind$larg[4]/2)^2)*pi)*ind$haut[4])/3))
(ind$masse[4]/(((((ind$larg[4]/2)^2)*pi)*ind$haut[4])/3)) > 0.009
source("checkPenvins.R")
checkPenvins(ind)
source("checkPenvins.R")
checkPenvins(ind)
!is.na(ind$masse[4])
!is.na(ind$masse[9])
!is.na(ind$haut[9])
!is.na(ind$larg[9])
!is.na(ind$larg[262])
source("checkPenvins.R")
checkPenvins(ind)
# Assembling Ind file
ind = data.frame() # empty table for individuals
# Compile all .txt ind files into one data.frame
for (f in 1:length(list.files(path = "~/Documents/Github/PenvinsCup_2017/data"))) {
cat("Proceeding to next file...\n")
if (grepl("ind", list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])) { # only if this is an ind file
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
cat("Processing", as.character(tmp[2,1]), "ind by", as.character(tmp[2,2]),".\n")
if (ncol(tmp) == 43) { # verifying compatibility of the file by number of col
colnames(tmp) = c("transect", "resp", "date", "coef", "mode", "d.chenal", "d.mer", "alt", "surf", "p.roc", "p.moul", "p.huit", "p.bala", "p.alg", "p.encr", "p.eau", "s.flaq", "d.flaq", "Bitret", "Gibcin", "Gibsp.", "Gibtum", "Litlit", "Litobt", "Litrud", "Litsax", "Monlin", "Nasinc", "Naspyg", "Nasret", "Oceeri", "Patsp.", "Rispar", "Thalap", "sp", "haut", "larg", "peri", "pred", "coul", "text", "epizo", "masse") # remove any name of column with correct name
ind = rbind(ind, tmp) # add temp data.frame to global data.frame
} else {
warning("File ind", tmp[1], "by", tmp[2],"not added to global data frame : not the required number of columns.\n")
}
}
}
cat("All Ind files in One")
###################
# Assembling Quad file
quad = data.frame() # empty table for quadrats
# Compile all .txt quad files into one data.frame
for (f in 1:length(list.files(path = "~/Documents/Github/PenvinsCup_2017/data"))) {
cat("Proceeding to next file...\n")
if (grepl("quad", list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f])) { # only if this is an ind file
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
cat("Processing", as.character(tmp[2,1]), "quad by", as.character(tmp[2,2]),".\n")
if (ncol(tmp) == 34) { # verifying compatibility of the file by number of col
colnames(tmp) = c("transect", "resp", "date", "coef", "mode", "d.chenal", "d.mer", "alt", "surf", "p.roc", "p.moul", "p.huit", "p.bala", "p.alg", "p.encr", "p.eau", "s.flaq", "d.flaq", "Bitret", "Gibcin", "Gibsp.", "Gibtum", "Litlit", "Litobt", "Litrud", "Litsax", "Monlin", "Nasinc", "Naspyg", "Nasret", "Oceeri", "Patsp.", "Rispar", "Thalap") # remove any name of column with correct name
quad = rbind(quad, tmp) # add temp data.frame to global data.frame
} else {
warning("File quad", tmp[1], "by", tmp[2],"not added to global data frame : not the required number of columns.\n")
}
}
}
cat("All Quad files in One")
####################
# Finishing
# Necessary verifications
str(ind)
str(quad)
# checkPenvins
checkPenvins(ind)
checkPenvins(quad)
ind <- read.table("data/b30indCORR2.txt", header = TRUE)
source("checkPenvins.R")
checkPenvins(ind)
length(ind)
source("checkPenvins.R")
checkPenvins(ind)
# Working directory
setwd("~/Documents/GitHub/PenvinsCup_2017")
source("checkPenvins.R")
# Running a serie of checkPenvins over each file
for (f in 1:length(list.files(path = "~/Documents/Github/PenvinsCup_2017/data"))) {
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
readline(prompt="Press [enter] to continue")
}
source("checkPenvins.R")
checkPenvins(ind)
source("checkPenvins.R")
checkPenvins(ind)
source("checkPenvins.R")
checkPenvins(ind)
source("checkPenvins.R")
# Running a serie of checkPenvins over each file
for (f in 1:length(list.files(path = "~/Documents/Github/PenvinsCup_2017/data"))) {
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
readline(prompt="Press [enter] to continue")
}
readline(prompt="Press [enter] to continue")
# Running a serie of checkPenvins over each file
for (f in 1:length(list.files(path = "~/Documents/Github/PenvinsCup_2017/data"))) {
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = FALSE)
readline(prompt="Press [enter] to continue")
}
# Running a serie of checkPenvins over each file
for (f in 1:length(list.files(path = "~/Documents/Github/PenvinsCup_2017/data"))) {
tmp = read.table(paste("data/",list.files(path = "~/Documents/Github/PenvinsCup_2017/data")[f], sep = ""), header = TRUE)
checkPenvins(tmp, bilan = TRUE)
readline(prompt="Press [enter] to continue")
}
